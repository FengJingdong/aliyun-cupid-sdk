/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_outer_classname = "SparkClient";
option java_generic_services = true;
package apsara.odps.cupid.client.protocol;

message CheckServiceReadyRequest {
    optional string message = 1;
}

message CheckServiceReadyResponse {
    optional string response = 1;
}

message Void {
}

message AddJarRequest {
    optional string panguRelativePath = 1;
    optional string tempResourceName = 2;
}

message StartJobRequest {
    optional string className = 1;
    optional string jarName = 2;
    optional JobConf jobConf = 3;
}

message StartJobResponse {
    optional string jobId = 1;
}

message GetJobStatusRequest {
    optional string jobId = 1;
}

message JobSuccess {
    optional string jobId = 1;
    optional bytes jobResult = 2;
}

message JobConfItem {
    required string key = 1;
    required string value = 2;
}

message JobConf {
    repeated JobConfItem jobconfitem = 1;
}

message JobStart {
    optional string jobId = 1;
}

message JobRunning {
    optional string jobId = 1;
}


message JobKilled {
    optional string jobId = 1;
}

message JobFailed {
    optional string jobId = 1;
    optional string errormsg = 2;
}

message GetJobStatusResponse {
    required string jobId = 1;
    optional JobStart jobStart = 2;
    optional JobFailed jobFailed = 3;
    optional JobSuccess jobSuccess = 4;
    optional JobKilled jobKilled = 5;
    optional JobRunning jobRunning = 6;
}

message GetJobResultRequest {
    optional string jobId = 1;
}

message GetJobResultResponse {
    optional bytes jobResult = 1;
}

message KillJobRequest {
    optional string jobId = 1;
}

service SparkClientService {
    rpc CheckServiceReady (CheckServiceReadyRequest) returns (CheckServiceReadyResponse);
    rpc AddJar (AddJarRequest) returns (Void);
    rpc StartJob (StartJobRequest) returns (StartJobResponse);
    rpc GetJobStatus (GetJobStatusRequest) returns (GetJobStatusResponse);
    rpc StopRemoteDriver (Void) returns (Void);
    rpc KillJob (KillJobRequest) returns (Void);
    rpc ClientHeartBeat(Void) returns (Void);
}
